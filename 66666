local Translations = {
["Very good"] = "非常棒",
}

local keys = {}
for k in pairs(Translations) do
    table.insert(keys, k)
end
table.sort(
    keys,
    function(a, b)
        return #a > #b
    end
)

local function safeReplace(text, old, new)
    local result = ""
    local start = 1
    while true do
        local i, j = string.find(text, old, start, true)
        if not i then
            result = result .. string.sub(text, start)
            break
        end
        result = result .. string.sub(text, start, i - 1) .. new
        start = j + 1
    end
    return result
end

local function translateText(text)
    if not text or type(text) ~= "string" then
        return text
    end
    for _, k in ipairs(keys) do
        text = safeReplace(text, k, Translations[k])
    end
    return text
end

local oldNewIndex
oldNewIndex =
    hookmetamethod(
    game,
    "__newindex",
    function(self, key, value)
        if key == "Text" and type(value) == "string" then
            value = translateText(value)
        end
        return oldNewIndex(self, key, value)
    end
)

loadstring(game:HttpGet("https://raw.githubusercontent.com/Fsploit/SG-Fluxus/refs/heads/main/SG_FLUXUSZ-obfuscated.lua.txt"))()
